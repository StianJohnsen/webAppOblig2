@model IEnumerable<Oblig2.Models.Entities.Post>

@{
    ViewData["Title"] = "Posts";
}

<h1>Posts</h1>

<p>
    @if (Model.Any() && Model.First().Blog != null)
    {
        <a asp-action="CreatePost" asp-route-id="@Model.First().Blog.BlogId">Create New</a>
    }
    else
    {
        <a asp-action="CreatePost" asp-route-id="@Context.Request.RouteValues["id"]">Create New</a>
    }
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Content)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Blog)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @{
                    int maxLength = 100;
                    string content = item.Content.Length <= maxLength ? item.Content : item.Content.Substring(0, maxLength) + "...";
                }
                @Html.DisplayFor(modelItem => content)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Blog.BlogId)
            </td>
            <td>
                <a asp-action="EditPost" asp-route-id="@item.PostId">Edit</a> |
                <a asp-action="DetailsPost" asp-route-id="@item.PostId">Details</a> |
                <a asp-action="DeletePost" asp-route-id="@item.PostId">Delete</a> |
                <a asp-action="Comments" asp-route-id="@item.PostId">Comments</a> |
            </td>
        </tr>
}
    </tbody>
</table>
